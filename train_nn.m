% Solve a Pattern Recognition Problem with a Neural Network
% Script generated by Neural Pattern Recognition app
% Created 12-May-2015 13:25:54
%
% This script assumes these variables are defined:
%
%   binArray - input data.
%   classArray - target data.

x = binArray';
t = classArray';

if(~exist('net','var'))
    % Choose a Training Function
    % For a list of all training functions type: help nntrain
    % 'trainlm' is usually fastest.
    % 'trainbr' takes longer but may be better for challenging problems.
    % 'trainscg' uses less memory. Suitable in low memory situations.
    trainFcn = 'trainscg';  % Scaled conjugate gradient backpropagation.

    % Create a Pattern Recognition Network
    hiddenLayerSize = 20;
    net = patternnet(hiddenLayerSize);

    % Setup Division of Data for Training, Validation, Testing
    net.divideParam.trainRatio = 70/100;
    net.divideParam.valRatio = 15/100;
    net.divideParam.testRatio = 15/100;

    % Train the Network
    [net,tr] = train(net,x,t);
end

% Test the Network
y = net(x);
e = gsubtract(t,y);
performance = perform(net,t,y);
tind = vec2ind(t);
yind = vec2ind(y);
percentErrors = sum(tind ~= yind)/numel(tind);

%%FIND Best Matches for each class
file = fopen('true_matches.txt','w');
for i = 1:5
    idx = find(y(i,:)==max(y(i,:)));
    img=imread(descriptors(idx).name);
    name=sprintf('bestmatch_c%d.png',i);
    imwrite(img,name);
    fprintf(file,'Class %d: %s\n',i, mat2str(y(:,idx),3));
end
fclose(file);


%%FIND false matches
file = fopen('false_matches.txt','w');
for i = 1:5
    %indices of false matches where image was false placed in class i
    false_class = find((yind==i) & (tind ~= yind)); 
    %The resulsts for the false matches
    y_false = y(:,false_class);
   
    %INDEX of most sure wrong answer
    most_sure = find(y_false(i,:)==max(y_false(i,:))); 
    gidx = false_class(most_sure);             %convert to global idx
    img=imread(descriptors(gidx).name);       %read the image
    imwrite(img,sprintf('class_%d_most_sure_wrong.png',i)); %write it
    fprintf(file,'Class %d<-%d Most: %s\n',i,yind(gidx),...
        mat2str(y_false(:,most_sure),3)); %print info
    
    
    %INDEX of Least sure wrong answer
    least_sure= find(y_false(i,:)==min(y_false(i,:)));
    gidx = false_class(least_sure);
    img=imread(descriptors(gidx).name);
    imwrite(img, sprintf('class_%d_least_sure_wrong.png',i));
    fprintf(file,'Class %d<-%d Least: %s\n\n',i,yind(gidx),...
        mat2str(y_false(:,least_sure),3));
    
end
fclose(file);

% View the Network
%view(net)

% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, ploterrhist(e)
%figure, plotconfusion(t,y)
%figure, plotroc(t,y)

